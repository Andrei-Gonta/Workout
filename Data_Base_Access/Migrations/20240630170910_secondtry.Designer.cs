// <auto-generated />
using System;
using Data_Base_Access;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Base_Access.Migrations
{
    [DbContext(typeof(WorkoutContext))]
    [Migration("20240630170910_secondtry")]
    partial class secondtry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data_Base_Access.Entities.Exercises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ex_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises", (string)null);
                });

            modelBuilder.Entity("Data_Base_Access.Entities.ExercisesLog", b =>
                {
                    b.Property<int>("Id_Workout")
                        .HasColumnType("int");

                    b.Property<int>("Id_Exercice")
                        .HasColumnType("int");

                    b.Property<double?>("Distance")
                        .HasColumnType("float");

                    b.Property<int?>("Reps")
                        .HasColumnType("int");

                    b.Property<int?>("Sets")
                        .HasColumnType("int");

                    b.Property<double?>("Time_Session")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id_Workout", "Id_Exercice");

                    b.HasIndex("Id_Exercice");

                    b.ToTable("ExercisesLog", (string)null);
                });

            modelBuilder.Entity("Data_Base_Access.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Data_Base_Access.Entities.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CientID");

                    b.ToTable("Workout", (string)null);
                });

            modelBuilder.Entity("Data_Base_Access.Entities.ExercisesLog", b =>
                {
                    b.HasOne("Data_Base_Access.Entities.Exercises", "Exercise")
                        .WithMany("ExerciseLogs")
                        .HasForeignKey("Id_Exercice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Base_Access.Entities.Workout", "Workout")
                        .WithMany("ExercisesLog")
                        .HasForeignKey("Id_Workout")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("Data_Base_Access.Entities.Workout", b =>
                {
                    b.HasOne("Data_Base_Access.Entities.Users", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("CientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data_Base_Access.Entities.Exercises", b =>
                {
                    b.Navigation("ExerciseLogs");
                });

            modelBuilder.Entity("Data_Base_Access.Entities.Users", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("Data_Base_Access.Entities.Workout", b =>
                {
                    b.Navigation("ExercisesLog");
                });
#pragma warning restore 612, 618
        }
    }
}
