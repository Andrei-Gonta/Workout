@page "/addworkout={id}"
@using Data_Base_Access
@using Data_Base_Access.Entities
@using Data_Base_Access.Repositories.NewFolder.IGenericRepository
@using Data_Base_Access.Repositories.NewFolder.ExercisesRepository
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@attribute [StreamRendering]
@inject IGenericRepository<Users> userRepository
@inject IGenericRepository<Workout> workoutRepository
@inject NavigationManager NavigationManager
@rendermode InteractiveServer


<h1>AddWorkout</h1>

<EditForm Model="newWorkout" OnSubmit="Submit" FormName="AddWorkout">
    <div class="form-control">
        <label>
            Duration (Minutes):   
            <InputNumber @bind-Value="newWorkout!.Duration" class="form-control" />
        </label>
    </div>
    <div class="form-control">
        <label>
            Date
            <input type="date"  @bind="newWorkout!.Date" class="form-control" />
        </label>
    </div>

    <div><button type="submit" class="btn btn-primary">Add Workout</button></div>
</EditForm>






@code
{

    Workout newWorkout = new Workout();
    public Users user = new Users();
    [Parameter]
    public string id { get; set; }
    public int userID;
   


    protected override async Task OnInitializedAsync()
    {
        userID = Convert.ToInt32(id);
        user = await userRepository.GetByIDAsync(userID);
        newWorkout.CientID = user.Id;
    }

    private async Task Submit()
    {
            await workoutRepository.AddAsync(newWorkout);
            NavigationManager.NavigateTo($"/workouts={id}");
        }
    }
}


