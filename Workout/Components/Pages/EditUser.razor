@page "/edituser={id}"
@using Data_Base_Access
@using Data_Base_Access.Entities
@using Data_Base_Access.Repositories.NewFolder.IGenericRepository
@using Data_Base_Access.Repositories.UserRepository
@using Data_Base_Access.Repositories.UsersRepository
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject IGenericRepository<Users> userRepository
@inject NavigationManager NavigationManager

<h1 >Edit Client @modUser.Name @modUser.Surname</h1>

<center >
    <div class=" shape">
<EditForm Model="modUser" OnSubmit="Submit" FormName="ModifyUser" class=" form">
    <div class="transparent-form ">
                <label class="lbl">
            Name:
            <InputText @bind-Value="modUser.Name" class="form-control"></InputText>
        </label>
    </div>
    <div class="transparent-form ">
        <label>
            Email:
            <InputText @bind-Value="modUser.Email" class="form-control" />
        </label>
    </div>
    <div class="transparent-form ">
        <label>
            Phone number:
            <InputText @bind-Value="modUser.Phone" class="form-control" />
        </label>
    </div>
    <div class ="transparent-form ">
        <label>
            Weight:
            <InputNumber @bind-Value="modUser.Weight" class="form-control" />
        </label>
    </div>
    <div class="transparent-form ">
        <label>
            Age:
            <InputNumber @bind-Value="modUser.Age" class="form-control" />
        </label>
    </div>
    <div><button type="submit" class="btn-add">Modifiy Client</button></div>
</EditForm>
</div>
</center>




@code {
    private Users modUser = new Users();
    [Parameter]
    public string id { get; set; }
    public int user_Id;

    protected override async Task OnInitializedAsync()
    {
        user_Id = Convert.ToInt32(id);
        modUser = await userRepository.GetByIDAsync(user_Id) ?? new Users();

    }

    private async Task Submit()
    {
        await userRepository.UpdateAsync(modUser);
        NavigationManager.NavigateTo("/home");
    }
}

