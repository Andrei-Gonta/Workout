@page "/"
@using Data_Base_Access
@using Data_Base_Access.Entities
@using Data_Base_Access.Repositories.NewFolder.IGenericRepository
@using Data_Base_Access.Repositories.WorkoutRepository
@using Data_Base_Access.Repositories.UserRepository
@using Data_Base_Access.Repositories.UsersRepository
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject IGenericRepository<Users> userRepository

@inject NavigationManager NavigationManager

<PageTitle>Users</PageTitle>


@if (UsersList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>Clients List</h3>
    
    
        
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Surname</th>
                <th>Phone number</th>
                <th>Email</th>
                <th>Age</th>
                <th>Weight</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in UsersList)
            {
                <tr>
                   
                    <td>@user.Id</td>
                    <td>@user.Name</td>
                    <td>@user.Surname</td>
                    <td>@user.Phone</td>
                    <td>@user.Email</td>
                    <td>@user.Age</td>
                    <td>@user.Weight</td>
                        <td>
                            <button class=" btn-delete" @onclick="() => Delete(user)">X</button>
                            <button class="  btn-edit" @onclick="() => GoToEditUser(user.Id)">#</button>
                            <button class="  btn-workout" @onclick="() => GoToWorkouts(user.Id)">Workouts</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
        <button class="btn btn-primary btn-add" @onclick="@(() => GoToAddUser())">Add User</button>
    
   
    
    

    
}


@code {
    public Users [] UsersList;
    public IEnumerable<Users> Users;
    public static WorkoutContext context;



    protected override async Task OnInitializedAsync()
    {

        
        Users = await userRepository.GetAll();
        UsersList = Users.ToArray();

    }

    public void GoToAddUser()
    {
        NavigationManager.NavigateTo("/adduser");
    }

    async Task Delete(Users user)
    {

        await userRepository.DeleteAsync(user.Id);
        UsersList = Users.ToArray();
        await Task.Delay(100);
    }


    void GoToEditUser(int id)
    {

        NavigationManager.NavigateTo($"/edituser={id}");
    }

    void GoToWorkouts(int id)
    {

        NavigationManager.NavigateTo($"/workouts={id}");
    }

}