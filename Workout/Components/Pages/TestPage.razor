@page "/testpage"
@using Data_Base_Access
@using Data_Base_Access.Entities
@using Data_Base_Access.Repositories.NewFolder.IGenericRepository
@using Data_Base_Access.Repositories.UserRepository
@using Data_Base_Access.Repositories.UsersRepository
@using Microsoft.EntityFrameworkCore
@attribute [StreamRendering]
@inject IGenericRepository<Users> userRepository

<PageTitle>Users</PageTitle>

<h3>TestPage</h3>

<p>This component shows data of all USERS.</p>







@if (UsersList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Surname</th>
                <th>Phone number</th>
                <th>Email</th>
                <th>Age</th>
                <th>Weight</th>
                <th> Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in UsersList)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.Name</td>
                    <td>@user.Surname</td>
                    <td>@user.Phone</td>
                    <td>@user.Email</td>
                    <td>@user.Age</td>
                    <td>@user.Weight</td>
                    <td>
                      
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    public Users [] UsersList;
    public IEnumerable<Users> User;
    public static WorkoutContext context;

    

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);

        // Retrieve the list of users from the database


        Console.WriteLine("Hello World!");


        User = await userRepository.GetAll();
        UsersList = User.ToArray();
        Console.WriteLine("altceva");



    }
    }